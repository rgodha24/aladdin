generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Location {
  id        Int        @id @default(autoincrement())
  name      String
  inventory Item[]
  users     AuthUser[]
}

model Item {
  id       Int           @id @default(autoincrement())
  name     String
  quantity Int
  imgUrl   String
  history  ItemHistory[]

  Location   Location? @relation(fields: [locationId], references: [id])
  locationId Int?

  @@index([locationId])
}

model ItemHistory {
  id        Int      @id @default(autoincrement())
  delta     Int
  createdAt DateTime @default(now())

  Item   Item? @relation(fields: [itemId], references: [id])
  itemId Int?

  @@index([itemId])
}

model AuthUser {
  id                   String        @id @unique
  username             String        @unique
  auth_session         AuthSession[]
  auth_key             AuthKey[]
  accessible_locations Location[]

  @@map("auth_user")
}

model AuthSession {
  id             String   @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String   @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}
